IR.Write.Release :: (context) {
    invokeParameters = {context["child"]}
    invokeRelease = IR.CreateInvoke(Functions.MemoryRelease, invokeParameters)
    IR.Write(invokeRelease)
}

IR.Read.Release :: (context) {
    context["temp"] = IR.CreateTempVariable("RELEASE", context["child"])
    IR.Write(context["temp"])
    
    IR.Env.Defer.Push(context)

    return IR.Read(context["temp"])
}

IR.Defer.Release :: (context) {
    invokeParameters = {context["temp"]}
    invokeRelease = IR.CreateInvoke(Functions.MemoryRelease, invokeParameters)
    IR.Write(invokeRelease)
}

IR.CreateRelease :: (child) {
    return {"type"="Release", "child"=child, "defer"=IR.Defer.Release}
}