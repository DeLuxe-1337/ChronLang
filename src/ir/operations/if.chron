IR.Write.If :: (context) {
    trueBlock = Clone(context["trueBlock"])
    elseStatement = Clone(context["elseStatement"])
    expression = Clone(context["expression"])

    if elseStatement == nil {
        IR.Env.Defer.Create()
    }

    IR.Writer.WriteLine("if(" + Types.GetBooleanFromObject + "(" + IR.Read(expression) + "))")

    IR.Write(trueBlock)

    if elseStatement != nil {
        IR.Writer.WriteLine("else")

        IR.Write(elseStatement)
    } else {
        IR.Env.Defer.VisitCurrentScope()
        IR.Env.Defer.Pop()
    }
}

IR.CreateIf :: (expression, trueBlock, elseStatement) {
    return {"type"="If", "expression"=expression, "trueBlock"=IR.CreateScopedBlock(trueBlock), "elseStatement"=elseStatement}
}