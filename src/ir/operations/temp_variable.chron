IR.Temp.Count = -1

IR.Write.TempVariable :: (context) {
    expression = context["child"]
    varName = Clone(context["name"])

    if context["written"] != true {
        IR.Writer.WriteLine(context["dataType"] + " " + varName + " = " + IR.Read(expression) + ";")
        context["written"] = true
    } else {
        IR.Writer.WriteLine(varName + " = " + IR.Read(expression) + ";")
    }

    if expression["VariableCreatedRef"] != nil {
        invoke IR.Variable.VariableCreatedRef expression["VariableCreatedRef"](expression, context)
    }
}

IR.Read.TempVariable :: (context) {
    return Clone(context["name"])
}

IR.CreateTempVariable :: (name, expression) {
    IR.Temp.Count += 1
    newName = "_TEMP_" + Clone(name) + "_" + ToString(IR.Temp.Count)
    return <"type"="TempVariable", "name"=Clone(newName), "child"=Clone(expression), "dataType"="void*">
}