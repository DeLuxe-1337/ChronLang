include core.all
include ir.all

GenerateBasicFunction :: (name) {
    block = IR.CreateBlock()
    IR.Block.Append(block, IR.CreateInvoke("printf", <IR.CreateString("Hello, world")>))

    return IR.CreateFunction(name, block, nil)
}

Main :: {
    IR.Env.Scope.Create()
    
    IR.Env.Scope.Add("peak", "test value", false)

    PrintLn("Scope get:")
    PrintLn(IR.Env.Scope.Get("peak"))

    PrintLn("Creating another scope")

    IR.Env.Scope.Create()

    IR.Env.Scope.Add("peak", 60, false)

    PrintLn("Scope get:")
    PrintLn(IR.Env.Scope.Get("peak"))

    IR.Env.Scope.Pop()
    
    PrintLn("Writing basic function")

    IR.Write(GenerateBasicFunction("main"))

    PrintLn("Writing to file")

    IR.Writer.WriteToFile("out.chron_test.c")

    PrintLn("End of program")

    Memory.ReleaseAll()
}