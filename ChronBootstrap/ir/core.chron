WriteMap = <"Function"=IR.Write.Function, "Block"=IR.Write.Block, "Invoke"=IR.Write.Invoke, "EnvironmentAccessor"=IR.Write.EnvironmentAccessor>
ReadMap = <"Literals.String"=IR.Read.Literals.String, "EnvironmentAccessor"=IR.Read.EnvironmentAccessor, "Function"=IR.Read.Function>

IR.Write :: (node) {
    type = node["type"]
    visiter = WriteMap[type]

    PrintLn("Write " + type)
    
    invoke IR.Write visiter(node)
}

IR.Read :: (node) {
    type = node["type"]
    visiter = ReadMap[type]

    PrintLn("Read " + type)
    
    return invoke IR.Read visiter(node)
}