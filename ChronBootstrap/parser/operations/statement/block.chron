Parser.Statement.Block :: (state) {
    if Parser.State.Match(Parser.State.Get(state), "LBRACKET", nil) {
        Parser.State.Expect(state, "LBRACKET", nil, "Expected '{'")
        block = IR.CreateBlock()
        while Parser.State.Get(state)["type"] != "RBRACKET" {
            IR.Block.Append(block, Parser.Statement(state))
        }
        Parser.State.Expect(state, "RBRACKET", nil, "Expected '}'")
        return Clone(block)
    }
    return nil
}